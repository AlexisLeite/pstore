'use strict';

var E = require('@aluy/logger');
var m = require('lodash.clonedeep');

var l=(i,t,s)=>{if(!t.has(i))throw TypeError("Cannot "+s)};var e=(i,t,s)=>(l(i,t,"read from private field"),s?s.call(i):t.get(i)),r=(i,t,s)=>{if(t.has(i))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(i):t.set(i,s);},d=(i,t,s,o)=>(l(i,t,"write to private field"),o?o.call(i,s):t.set(i,s),s);var T=(i,t,s)=>(l(i,t,"access private method"),s);var N=new E({enabled:!0,level:3},{consoleConfig:"pstoreLoggerConfig",getReport:"getPStoreReport"}),p,h,g,n,a,c,f,w,I,C,P,y,u,b,U=class{constructor(t=[]){r(this,f);r(this,I);r(this,P);r(this,u);r(this,p,void 0);r(this,h,new Map);r(this,g,!1);r(this,n,!1);r(this,a,new Map);r(this,c,[]);d(this,p,new Map),t.forEach(s=>e(this,p).set(s.id,s));}get fields(){return N.log(1,"Got fields"),m(e(this,p))}batchInit(){d(this,g,!0);}batchFinish(){d(this,g,!1),e(this,a).forEach(t=>{e(this,p).set(t.id,t);});}delete(t){e(this,p).delete(t),e(this,h).delete(t);}getProps(t){if(!!e(this,p).get(t))return m(e(this,p).get(t))}suscribe(t,s){return e(this,h).get(t)||e(this,h).set(t,[]),e(this,h).get(t)?.push(s),()=>{e(this,h).set(t,(e(this,h).get(t)??[]).filter(o=>o!==s));}}update(t,s,o){e(this,g)?T(this,f,w).call(this,t,s,o):o?.emitUpdates===!1?(d(this,n,!0),e(this,c).push({configuration:o,field:t,newProps:s})):(e(this,n)&&(d(this,n,!1),T(this,I,C).call(this)),e(this,p).set(t,T(this,P,y).call(this,t,s)),T(this,u,b).call(this,t,e(this,p).get(t)));}};p=new WeakMap,h=new WeakMap,g=new WeakMap,n=new WeakMap,a=new WeakMap,c=new WeakMap,f=new WeakSet,w=function(t,s,o){if(!e(this,a).has(t)){let S=this.fields.get(t)??{id:t};e(this,a).set(t,m(S));}e(this,a).set(t,T(this,P,y).call(this,t,s,e(this,a).get(t)));},I=new WeakSet,C=function(){e(this,c).forEach(t=>T(this,u,b).call(this,t.field,T(this,P,y).call(this,t.field,t.newProps)));},P=new WeakSet,y=function(t,s,o=e(this,p).get(t)??{id:t}){return {...o,...s instanceof Function?s(e(this,p).get(t)):s}},u=new WeakSet,b=function(t,s){e(this,h).get(t)?.forEach(o=>o(s));};

exports.a = e;
exports.b = r;
exports.c = U;
